#!/bin/bash
# Remote CUDA Fix - –∑–∞–ø—É—Å–∫–∞–µ—Ç—Å—è —Å –ª–æ–∫–∞–ª—å–Ω–æ–π –º–∞—à–∏–Ω—ã
# –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –ø–æ–¥–∫–ª—é—á–∞–µ—Ç—Å—è –∫ GPU —Å–µ—Ä–≤–µ—Ä—É –∏ –∏—Å–ø—Ä–∞–≤–ª—è–µ—Ç CUDA

set -e

# –¶–≤–µ—Ç–∞ –¥–ª—è –≤—ã–≤–æ–¥–∞
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
NC='\033[0m' # No Color

echo -e "${YELLOW}üîß Remote CUDA Fix Tool${NC}"
echo "========================================"
echo ""

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤
if [ -f ".env" ]; then
    source .env
fi

GPU_SSH_HOST="${GPU_SSH_HOST:-}"
GPU_SSH_PORT="${GPU_SSH_PORT:-22}"
GPU_SSH_USER="${GPU_SSH_USER:-root}"

if [ -z "$GPU_SSH_HOST" ]; then
    echo -e "${RED}‚ùå GPU_SSH_HOST –Ω–µ –Ω–∞–π–¥–µ–Ω${NC}"
    echo ""
    echo "–í–∞—Ä–∏–∞–Ω—Ç—ã:"
    echo "1. –£–∫–∞–∂–∏—Ç–µ –≤ .env —Ñ–∞–π–ª–µ:"
    echo "   GPU_SSH_HOST=your.gpu.server.com"
    echo "   GPU_SSH_PORT=22"
    echo "   GPU_SSH_USER=root"
    echo ""
    echo "2. –ò–ª–∏ –∑–∞–ø—É—Å—Ç–∏—Ç–µ —Å –ø–∞—Ä–∞–º–µ—Ç—Ä–∞–º–∏:"
    echo "   GPU_SSH_HOST=1.2.3.4 $0"
    exit 1
fi

echo -e "–ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫: ${GREEN}${GPU_SSH_USER}@${GPU_SSH_HOST}:${GPU_SSH_PORT}${NC}"
echo ""

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –∫–æ–º–∞–Ω–¥ —á–µ—Ä–µ–∑ SSH
run_remote() {
    ssh -p "${GPU_SSH_PORT}" "${GPU_SSH_USER}@${GPU_SSH_HOST}" "$@"
}

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è
echo "1Ô∏è‚É£ –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è..."
if ! run_remote "echo 'Connection OK'" 2>/dev/null; then
    echo -e "${RED}‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–¥–∫–ª—é—á–∏—Ç—å—Å—è –∫ —Å–µ—Ä–≤–µ—Ä—É${NC}"
    echo ""
    echo "–ü—Ä–æ–≤–µ—Ä—å—Ç–µ:"
    echo "- SSH –¥–æ—Å—Ç—É–ø: ssh -p ${GPU_SSH_PORT} ${GPU_SSH_USER}@${GPU_SSH_HOST}"
    echo "- –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –≤ .env —Ñ–∞–π–ª–µ"
    exit 1
fi
echo -e "${GREEN}‚úÖ –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ —É—Å–ø–µ—à–Ω–æ${NC}"
echo ""

# –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ç–µ–∫—É—â–µ–≥–æ —Å–æ—Å—Ç–æ—è–Ω–∏—è CUDA
echo "2Ô∏è‚É£ –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ç–µ–∫—É—â–µ–≥–æ —Å–æ—Å—Ç–æ—è–Ω–∏—è CUDA..."
run_remote "cd /workspace/aporto && source .venv/bin/activate && python -c 'import torch; print(\"CUDA available:\", torch.cuda.is_available())'" || true
echo ""

# –ó–∞–ø—É—Å–∫ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è
echo "3Ô∏è‚É£ –ó–∞–ø—É—Å–∫ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è CUDA..."
echo ""
run_remote "cd /workspace/aporto && bash upscale/vastai_deployment/fix_torch_cuda.sh"
echo ""

# –ü–µ—Ä–µ–∑–∞–ø—É—Å–∫ —Å–µ—Ä–≤–µ—Ä–∞
echo "4Ô∏è‚É£ –ü–µ—Ä–µ–∑–∞–ø—É—Å–∫ —Å–µ—Ä–≤–µ—Ä–∞..."
run_remote "systemctl restart vast-upscale.service"
echo -e "${GREEN}‚úÖ –°–µ—Ä–≤–µ—Ä –ø–µ—Ä–µ–∑–∞–ø—É—â–µ–Ω${NC}"
echo ""

# –û–∂–∏–¥–∞–Ω–∏–µ –∑–∞–ø—É—Å–∫–∞
echo "5Ô∏è‚É£ –û–∂–∏–¥–∞–Ω–∏–µ –∑–∞–ø—É—Å–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞..."
sleep 5

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –ª–æ–≥–æ–≤
echo "6Ô∏è‚É£ –ü—Ä–æ–≤–µ—Ä–∫–∞ –ª–æ–≥–æ–≤..."
echo ""
run_remote "tail -30 /workspace/server.log"
echo ""

# –§–∏–Ω–∞–ª—å–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞
echo "7Ô∏è‚É£ –§–∏–Ω–∞–ª—å–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ CUDA..."
CUDA_STATUS=$(run_remote "cd /workspace/aporto && source .venv/bin/activate && python -c 'import torch; print(torch.cuda.is_available())'" 2>/dev/null || echo "Error")

if [ "$CUDA_STATUS" = "True" ]; then
    echo -e "${GREEN}‚úÖ CUDA —Ä–∞–±–æ—Ç–∞–µ—Ç —É—Å–ø–µ—à–Ω–æ!${NC}"
    run_remote "cd /workspace/aporto && source .venv/bin/activate && python -c 'import torch; print(f\"GPU: {torch.cuda.get_device_name(0)}\")'"
else
    echo -e "${YELLOW}‚ö†Ô∏è  CUDA –≤—Å–µ –µ—â–µ –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω${NC}"
    echo ""
    echo "–î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞:"
    run_remote "cd /workspace/aporto && bash upscale/vastai_deployment/diagnose_cuda.sh"
fi

echo ""
echo -e "${GREEN}üéâ –ì–æ—Ç–æ–≤–æ!${NC}"
echo ""
echo "–°–ª–µ–¥—É—é—â–∏–µ —à–∞–≥–∏:"
echo "- –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ª–æ–≥–∏: ssh -p ${GPU_SSH_PORT} ${GPU_SSH_USER}@${GPU_SSH_HOST} 'tail -f /workspace/server.log'"
echo "- –¢–µ—Å—Ç –∑–¥–æ—Ä–æ–≤—å—è: curl http://${GPU_SSH_HOST}:5000/health"
